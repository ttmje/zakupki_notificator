name: CI-DI-Pipeline-to-AWS-ECS
env: 
  AWS_REGION_NAME: "us-east-1" 
  ECR_REPO_NAME:   "tender_notify"
  COMMIT_HASH:     "${{ github.sha }}"
  AWS_REPO:        "948206608465.dkr.ecr.us-east-1.amazonaws.com"
  
on:
  push:
    branches: [ main ]
    
jobs:
  ci_cd:
    runs-on: ubuntu-latest
    
    steps:
      - name: Git clone our repo
        uses: actions/checkout@v2
        
      - name: Creating .env with credentials
        run: echo "API_TOKEN = '${{secrets.API_TOKEN}}'" >> .env | echo "admin_id = '${{secrets.ADMIN_ID}}'" >> .env

      - name: Create Docker image
        run: docker build -t ${{env.ECR_REPO_NAME}} .
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
         aws-access-key-id: ${{secrets.MY_AWS_ACCESS_KEY}}
         aws-secret-access-key: ${{secrets.MY_AWS_SECRET_KEY}}
         aws-region: ${{env.AWS_REGION_NAME}}
        
      - name: Login to AWS ECR
        run: aws ecr get-login-password --region ${{env.AWS_REGION_NAME}} | docker login --username AWS --password-stdin ${{env.AWS_REPO}}
       
      - name: Rename Docker image for AWS
        run: docker tag ${{env.ECR_REPO_NAME}}:latest ${{env.AWS_REPO}}/${{env.ECR_REPO_NAME}}:${{env.COMMIT_HASH}}
        
      - name: Push Docker image to AWS ECR
        run: docker push ${{env.AWS_REPO}}/${{env.ECR_REPO_NAME}}:${{env.COMMIT_HASH}}
        
      - name: Render AWS ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with: 
           task-definition: task-definition.json
           container-name: notify
           image: ${{env.AWS_REPO}}/${{env.ECR_REPO_NAME}}:${{env.COMMIT_HASH}}
           
      - name: Deploy to AWS ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
           task-definition: ${{ steps.task-def.outputs.task-definition }}
           cluster: tender
           service: tenders
           wait-for-service-stability: true
        
        
  
