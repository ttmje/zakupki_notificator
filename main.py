# –ë–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º
import asyncio
from notify import Notify
from parse_zakupki import parse
from db import database
import config
import logging
from aiogram import Bot, Dispatcher, executor, types
import keyboards as kb

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
db = database('users.db')

# –ó–∞–¥–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = Bot(token=config.API_TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=["start"])
async def start_bot(message: types.Message):
    await bot.send_message(message.chat.id,
                           f"–ü—Ä–∏–≤–µ—Ç! MYSYA 228  \n–≠—Ç–æ—Ç –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º –∑–∞–∫—É–ø–∫–∞–º —Å —Å–∞–π—Ç–∞ zakupki.gov.ru"
                           f"\n–°–µ–π—á–∞—Å –≤ –±–∞–∑–µ —É–∂–µ {db.show_last_id()} –∑–∞–∫—É–ø–æ–∫!")
    await message.reply('–ê–≥–∞, —è —É–∂–µ —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∑–∞–∫—É–ø–æ–∫!')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message_handler(commands=["help"])
async def start_bot(message: types.Message):
    await bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è —Ä–æ–±–æ—Ç-–Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä.\n"
                                            "–Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–±–∏—Ä–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∑–∞–∫—É–ø–∫–∞—Ö —Å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞–ª–∞ zakupki.gov.ru\n"
                                            "/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π  –æ–Ω–æ–≤—ã—Ö–∑–∞–∫—É–ø–∫–∞—Ö\n"
                                            "/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å –æ—Ç —Ä—ã—Å—Å—ã–ª–∫–∏\n"
                                            "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
                                            "/help - –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
                                            "/last - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ—Ä–≥ –≤ –±–∞–∑–µ\n"
                                            "/file - –ü–æ–ª—É—á–∏—Ç—å EXCEL —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫—É–ø–∫–∞—Ö\n"
                                            "/parse - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /last
@dp.message_handler(commands=['last'])
async def send_message(message: types.Message):
    await bot.send_message(message.chat.id, f" –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ç–æ—Ä–≥ –≤ –±–∞–∑–µ:\n"
                                            f"ID : {db.show_last_tender().Id}\n"
                                            f"–ù–æ–º–µ—Ä –∑–∞–∫—É–ø–∫–∏ : {db.show_last_tender().–ù–æ–º–µ—Ä}\n"
                                            f"–¢–∏–ø –∑–∞–∫—É–ø–∫–∏: {db.show_last_tender().–¢–∏–ø}\n"
                                            f"–û–ø–∏—Å–∞–Ω–∏–µ üìù: {db.show_last_tender().–û–ø–∏—Å–∞–Ω–∏–µ}\n"
                                            f"–ó–∞–∫–∞–∑—á–∏–∫ üßë: {db.show_last_tender().–ó–∞–∫–∞–∑—á–∏–∫}\n"
                                            f"–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑—á–∏–∫–∞ üîó: {db.show_last_tender().–°—Å—ã–ª–∫–∞_–Ω–∞_–∑–∞–∫–∞–∑—á–∏–∫–∞}\n"
                                            f"–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫—É–ø–∫—É üîó: {db.show_last_tender().–°—Å—ã–ª–∫–∞_–Ω–∞_–∑–∞–∫—É–ø–∫—É}\n"
                                            f"–î–∞—Ç–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è üìÜ: {db.show_last_tender().–î–∞—Ç–∞_—Ä–∞–∑–º–µ—â–µ–Ω–∏—è}\n"
                                            f"–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ üí∞: {db.show_last_tender().–¶–µ–Ω–∞}\n")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /file
@dp.message_handler(commands=['file'])
async def send_message(message: types.Message):
    FILE = open('torgi.csv', "rb")
    await bot.send_document(message.chat.id, FILE, caption=f"–ü–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ —ç—Ç–æ—Ç —Ñ–∞–π–ª!")

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
@dp.message_handler(commands=['subscribe'])
async def subscribe(message: types.Message):
    if (not db.user_exists(message.from_user.id)):
        # –ï—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–∞–±–∞–≤–ª—è–µ–º –µ–≥–æ
        db.add_users(message.from_user.id)
    else:
        # –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–º—É —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        db.update_users(message.from_user.id, True)
    await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É! \n")

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Ç–ø–∏—Å–∫–∏
@dp.message_handler(commands=['unsubscribe'])
async def unsubscribe(message: types.Message):
    if (not db.user_exists(message.from_user.id)):
        # –ï—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π (–∑–∞–ø–æ–º–∏–Ω–∞–µ–º)
        db.add_users(message.from_user.id, False)
        await message.answer("–í—ã –∏—Ç–∞–∫ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã.")
    else:
        # –ï—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å, —Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        db.update_users(message.from_user.id, False)
        await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç —Ä—ã—Å—Å—ã–ª–∫–∏.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /parse
@dp.message_handler(commands=["parse"])
async def start_bot(message: types.Message):
    await bot.send_message(message.chat.id,
                           "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 100 —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ—Ä—Ç–∞–ª–∞ –∑–∞–∫—É–ø–æ–∫, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω –≤ —Ñ–∞–π–ª, –ø—Ä–æ—à—É –≤–∞—Å –ø–æ–¥–æ–∂–¥–∞—Ç—å –ø–∞—Ä—É –º–∏–Ω—É—Ç")
    parse.parse_func()

# –§—É–Ω–∫—Ü–∏—è –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
async def notify_starter():
    await Notify(bot=bot, db=db).sheduler()

# –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
async def on_start_up(x):
    asyncio.create_task(notify_starter())

# –∑–∞–ø—É—Å–∫–µ–∞–µ–º –ª–æ–Ω–≥ –ø–æ–ª–ª–∏–Ω–≥
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True, on_startup=on_start_up)
